name: Production Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: askify_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/askify_test
        run: |
          python test.py

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Fetch Prod Configurations
        env:
          FLASK_ENV: prod
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          GOOGLE_OAUTH_REDIRECT_URI: ${{ secrets.GOOGLE_OAUTH_REDIRECT_URI }}
          GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GITHUB_OAUTH_CLIENT_ID }}
          GITHUB_OAUTH_CLIENT_SECRET: ${{ secrets.GITHUB_OAUTH_CLIENT_SECRET }}
          GITHUB_OAUTH_REDIRECT_URI: ${{ secrets.GITHUB_OAUTH_REDIRECT_URI }}
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_PUBLIC_URL: ${{ secrets.R2_PUBLIC_URL }}
        run: |
          echo "[APP]" > config.ini
          echo "SECRET_KEY = $SECRET_KEY" >> config.ini
          echo "JWT_SECRET_KEY = $JWT_SECRET_KEY" >> config.ini
          echo "" >> config.ini
          echo "[POSTGRESQL]" >> config.ini
          echo "DATABASE_URL = $DATABASE_URL" >> config.ini
          echo "" >> config.ini
          echo "[GOOGLE]" >> config.ini
          echo "GOOGLE_OAUTH_CLIENT_ID = ${GOOGLE_OAUTH_CLIENT_ID}" >> config.ini
          echo "GOOGLE_OAUTH_CLIENT_SECRET = ${GOOGLE_OAUTH_CLIENT_SECRET}" >> config.ini
          echo "GOOGLE_OAUTH_REDIRECT_URI = ${GOOGLE_OAUTH_REDIRECT_URI}" >> config.ini
          echo "GOOGLE_OAUTH_AUTH_URL = https://accounts.google.com/o/oauth2/v2/auth" >> config.ini
          echo "GOOGLE_OAUTH_TOKEN_URL = https://oauth2.googleapis.com/token" >> config.ini
          echo "GOOGLE_OAUTH_USER_INFO_URL = https://www.googleapis.com/oauth2/v3/userinfo" >> config.ini
          echo "GOOGLE_OAUTH_SCOPE_PROFILE = https://www.googleapis.com/auth/userinfo.profile" >> config.ini
          echo "GOOGLE_OAUTH_SCOPE_EMAIL = https://www.googleapis.com/auth/userinfo.email" >> config.ini
          echo "" >> config.ini
          echo "[GITHUB]" >> config.ini
          echo "GITHUB_OAUTH_CLIENT_ID = ${GITHUB_OAUTH_CLIENT_ID}" >> config.ini
          echo "GITHUB_OAUTH_CLIENT_SECRET = ${GITHUB_OAUTH_CLIENT_SECRET}" >> config.ini
          echo "GITHUB_OAUTH_REDIRECT_URI = ${GITHUB_OAUTH_REDIRECT_URI}" >> config.ini
          echo "GITHUB_OAUTH_AUTH_URL = https://github.com/login/oauth/authorize" >> config.ini
          echo "GITHUB_OAUTH_TOKEN_URL = https://github.com/login/oauth/access_token" >> config.ini
          echo "GITHUB_OAUTH_USER_INFO_URL = https://api.github.com/user" >> config.ini
          echo "" >> config.ini
          echo "[CLOUDFLARE]" >> config.ini
          echo "ACCOUNT_ID = $ACCOUNT_ID" >> config.ini
          echo "API_TOKEN = $API_TOKEN" >> config.ini
          echo "R2_BUCKET_NAME = $R2_BUCKET_NAME" >> config.ini
          echo "R2_PUBLIC_URL = $R2_PUBLIC_URL" >> config.ini
